#ifndef __EDGE_H__
#define __EDGE_H__

#include <set>
#include <string>

namespace Graph
{
  //============================================================================
  //----------------------------------------------------------------------------
  template <typename T>
    struct delete_element
    {
      void operator()(T t) const
      {
        delete t;
      }
    };

  //============================================================================
  class Edge
  {
  private:
    //--------------------------------------------------------------------------
    int       _v;
    int       _w;
    double    _weight;

  public:
    //--------------------------------------------------------------------------
    Edge(int v, int w, double weight);

    //--------------------------------------------------------------------------
    ~Edge();

    //--------------------------------------------------------------------------
    int either();

    //--------------------------------------------------------------------------
    int other(int v);

    //--------------------------------------------------------------------------
    double weight();

    //--------------------------------------------------------------------------
    bool operator<(const Edge &lhs, const Edge &rhs) const;

    //--------------------------------------------------------------------------
    std::string toString() = 0;
  };

}

#endif
